{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAgCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,GACFF,EAAQ,C,SAACH,E,MAASC,IAGpBG,EAAO,C,SAACJ,E,MAAUC,MACjBA,OAxCM,CACXQ,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,iBAEF,IAAIC,EAAQC,OAAOH,EAAEI,cAAchB,MAAMiB,OACzC,MAAMC,EAAOH,OAAOH,EAAEI,cAAcE,KAAKD,OACnCE,EAASJ,OAAOH,EAAEI,cAAcG,OAAOF,OAE7C,IAAK,IAAIG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EACrDtB,EAAcsB,EAAUN,GACrBO,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MAEnBsB,EAAA1B,GAAS2B,OAAOC,QAAQ,uBAAqBzB,QAAiBC,UAG7DyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAEpBsB,EAAA1B,GAAS2B,OAAOG,QAAQ,sBAAoB3B,QAAeC,UAE7Dc,GAASI,EAGXN,EAAEI,cAAcW","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';//подключение библиотеки notiflix\n\nconst refs = {\n  form: document.querySelector('.form'),\n}\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  let delay = Number(e.currentTarget.delay.value);\n  const step = Number(e.currentTarget.step.value);\n  const amount = Number(e.currentTarget.amount.value);\n\n  for (let position = 1; position <= amount; position += 1){\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n      //console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n\n      })\n      .catch(({ position, delay }) => {\n      //console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n  \n  e.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position,delay}); // Fulfill\n      }\n\n      reject({position, delay}); // Reject\n    }, delay);\n  });   \n};\n\n\n\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","form","document","querySelector","addEventListener","e","preventDefault","delay1","Number","currentTarget","value","step","amount","position1","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.cbfae62f.js.map"}